name: my stack
description: laravel application stack
version: 1.0.0

init: |
  vars.Set("php-version", semver(outputOf("php --version")));
  vars.Set("laravel-version", semver(outputOf("php artisan --version")));

preconditions:
    - name: dependencies are installed
      check: binaryExists("php")

    - name: PHP is at least version 7.2
      check: vars.Get("php-version").GreaterThan("7.2")

    - name: running Laravel v9+
      check: vars.Get("laravel-version").GreaterThan("9.0")

    - name: project is a laravel application
      check: fs.Exists(getCwd() + "/artisan") && fs.Exists(getCwd() + "/composer.json")

startup:
  - task: start-containers
  - task: run-migrations-fresh
  - task: run-migrations-no-seed

shutdown:
  - task: stop-containers

servers:
  - task: horizon-queue
  - task: httpd

scheduler:
    - task: artisan-scheduler
      cron: '* * * * *'

tasks:
  - id: start-containers
    if: fs.Exists("docker-compose.yml") && binaryExists("docker-compose")
    command: docker-compose up -d
    silent: true

  - id: stop-containers
    if: fs.Exists("docker-compose.yml") && binaryExists("docker-compose")
    command: docker-compose down
    silent: true

  - name: run migrations (rebuild db)
    id: run-migrations-fresh
    if: hasFlag("seed")
    command: php artisan migrate:fresh --seed

  - name: run migrations (no seeding)
    id: run-migrations-no-seed
    if: hasFlag("seed") == false
    command: php artisan migrate

  - id: run-artisan-scheduler
    command: php artisan schedule:run

  - id: horizon-queue
    if: dev.ComposerJson(getCwd()).HasDependency("laravel/horizon")
    command: php artisan horizon
    platforms: ['linux', 'darwin']

  - id: httpd
    command: php artisan serve
