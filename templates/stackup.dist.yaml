name: my stack
description: laravel application stack
version: 1.0.0

settings:
  anonymous-stats: true
  exit-on-checksum-mismatch: false
  dotenv: ['.env', '.env.local']
  checksum-verification: false
  cache:
    ttl-minutes: 15
  domains:
    allowed:
      - raw.githubusercontent.com
      - '*.githubusercontent.com'
      - api.github.com
      - app.posthog.com
  defaults:
    tasks:
      silent: false
      path: $LOCAL_BACKEND_PROJECT_PATH

includes:
  - url: gh:permafrost-dev/stackup/main/templates/remote-includes/containers.yaml
  - url: gh:permafrost-dev/stackup/main/templates/remote-includes/laravel.yaml
  - url: gh:permafrost-dev/stackup/main/templates/remote-includes/php.yaml
  - url: gh:permafrost-dev/stackup/main/templates/remote-includes/node.yaml

init: |
  vars.Set("run_migrations_taskId", "run-migrations-" + (hasFlag("seed") ? "fresh" : "no-seed"));
  vars.Set("frontend_http_cmd", (platform() == "windows" ? "npm run dev" : "node ./node_modules/.bin/next dev"));

preconditions:
    - name: environment variables exist and are not empty
      check: |
        hasEnv("FRONTEND_PROJECT_PATH") && hasEnv("LOCAL_BACKEND_PROJECT_PATH") &&
        env("FRONTEND_PROJECT_PATH") != "" && env("LOCAL_BACKEND_PROJECT_PATH") != ""

    - name: frontend project directory exists
      check: fs.Exists($FRONTEND_PROJECT_PATH) && fs.IsDirectory($FRONTEND_PROJECT_PATH)

startup:
  - task: start-containers
  - task: '{{ $run_migrations_taskId }}'

shutdown:
  - task: stop-containers

servers:
  - task: frontend-httpd
  - task: httpd
  - task: horizon-queue

scheduler:
    - task: run-artisan-scheduler
      cron: '* * * * *'

tasks:
  - id: frontend-httpd
    path: $FRONTEND_PROJECT_PATH
    command: '{{ $frontend_http_cmd }}'
