name: my stack
description: my laravel application stack
version: 1.0.0

binaries:
  php: php8.2
  containers:
    compose: podman-compose
    manager: podman

filenames:
  dotenv: [".env", ".env.local"]
  dockercompose: env("LOCAL_BACKEND_PROJECT_PATH") + "/docker-compose.yml"

preconditions:
    - name: frontend project exists
      check: exists(env("FRONTEND_PROJECT_PATH"))

    - name: backend project has docker-compose file
      check: exists(env("LOCAL_BACKEND_PROJECT_PATH") + "/docker-compose.yml")

    - name: backend project is laravel project
      check: exists(env("LOCAL_BACKEND_PROJECT_PATH") + "/artisan")

tasks:
  - name: start containers
    message: Starting containers...
    command: podman-compose up -d

  - name: run migrations (rebuild db)
    if: hasFlag("seed")
    command: php artisan migrate:fresh --seed

  - name: run migrations (no seeding)
    if: hasFlag("seed")
    command: php artisan migrate

  - name: seed temp quickbooks refresh token for dev
    if: true
    command: php artisan qb:create-test-token

servers:
  - name: frontend-httpd
    command: node ./node_modules/.bin/next dev
    cwd: '{{ env("FRONTEND_PROJECT_PATH") }}'

  - name: horizon queue
    command: php artisan horizon
    cwd: '{{ env("LOCAL_BACKEND_PROJECT_PATH") }}'
    platforms: ['linux', 'darwin']

  - name: httpd
    command: php artisan serve
    cwd: '{{ env("LOCAL_BACKEND_PROJECT_PATH") }}'

scheduler:
    - name: say hello every two minutes
      command: printf "hello world\n"
      cron: '*/2 * * * *'

event-loop:
  interval: 60s
  jobs:
    - name: artisan scheduler
      command: php artisan schedule:run
      cwd: env("LOCAL_BACKEND_PROJECT_PATH")
